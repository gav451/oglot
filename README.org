#+title: Org source blocks with Eglot
#+author: Gerard Vermeulen

Oglot (Org source blocks with Eglot) builds on the idea of the post [[https://www.reddit.com/r/emacs/comments/w4f4u3][Using
Rustic, Eglot, and Org-Babel for literate programming with LSP support in Emacs]]
to facititate the analyis of Org source code blocks with LSP servers.  This
requires installing suitable LSP servers and tangling of the Org source blocks.

Oglot tries to locate an Org source block in a tangled file when calling
~org-edit-src-code~.  In case of success, it visits the tangled file in the
~org-src-mode~ buffer and narrows the buffer to the block before launching Eglot
on the tangled file.  Oglot ensures also to delete the invisible regions outside
the narrowed block before calling ~org-edit-src-exit~ or ~org-edit-src-save~.

Oglot works well with [[https://github.com/python-lsp/python-lsp-ruff][python-lsp-ruff]] and Python, but it should also work with
other languages and servers: add your language to ~oglot-maybe-ensure-modes~ and
define an ~org-babel-edit-prep:<LANGUAGE>~ function similar to
~org-babel-edit-prep:python~ using ~oglot-org-babel-edit-prep~.

Oglot also allows to control tangling: synchronizing an Org file with a tangled
file works best after tangling the Org file with the header arguments property
":comments link".  Toggling this property allows to use those comments for
internal use and to hide those comments for external use (by means of e.g.
~oglot-python-comments-link-toggle~).

To use Org source blocks with Eglot for ~lua-mode~, ~python-mode~, and
~ruby-mode~ source blocks, execute the following source block:

#+begin_src emacs-lisp -n :results silent
(when (and (package-installed-p 'oglot)
           (require 'oglot nil 'noerror))
  ;; Ensure to understand all caveats.
  (setopt oglot-maybe-ensure-modes '(lua-mode python-mode ruby-mode)))
#+end_src

Note that only ~python-mode~ works for sure and that the status of ~lua-mode~
and ~ruby-mode~ is unsure.

The file [[./examples/rpasyncio.org][rpasycnio.org]] is a practical example.

# Local Variables:
# fill-column: 80
# End:
